name: Build Docker Images

env:
  REPO_NAME: laravel-cypress-docker

on:
  schedule:
    # Run every Monday at 2 AM UTC
    - cron: '0 2 * * 1'
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild all images'
        required: false
        default: false
        type: boolean
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # PHP 8.4 combinations
          - php_version: "8.4"
            node_version: "24"
            is_latest: true
          - php_version: "8.4"
            node_version: "22"
            is_latest: false
          - php_version: "8.4"
            node_version: "20"
            is_latest: false

          # PHP 8.3 combinations
          - php_version: "8.3"
            node_version: "24"
            is_latest: false
          - php_version: "8.3" 
            node_version: "22"
            is_latest: false
          - php_version: "8.3"
            node_version: "20"
            is_latest: false
          
          # PHP 8.2 combinations
          - php_version: "8.2"
            node_version: "24"
            is_latest: false
          - php_version: "8.2"
            node_version: "22"
            is_latest: false
          - php_version: "8.2"
            node_version: "20"
            is_latest: false
          
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Create .env file
        run: |
          cat > .env << EOF
          PHP_VERSION=${{ matrix.php_version }}
          NODE_VERSION=${{ matrix.node_version }}
          DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_TOKEN=${{ secrets.DOCKER_HUB_TOKEN }}
          REPO_NAME=${{ env.REPO_NAME }}
          EOF

      - name: Make build script executable
        run: chmod +x build.sh

      - name: Build and push Docker images
        run: ./build.sh
        env:
          PHP_VERSION: ${{ matrix.php_version }}
          NODE_VERSION: ${{ matrix.node_version }}

      - name: Test built image
        run: |
          # Test the built image with basic functionality
          docker run --rm ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.REPO_NAME }}:php${{ matrix.php_version }}-node${{ matrix.node_version }} \
            bash -c "php -v && node -v && npm -v && composer --version"

      - name: Update latest tag (if applicable)
        if: matrix.is_latest
        run: |
          docker buildx imagetools create \
            --tag ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.REPO_NAME }}:latest \
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.REPO_NAME }}:php${{ matrix.php_version }}-node${{ matrix.node_version }}